TODO
====


DONE:
=====

- test piping into tsung and outputing results
- make a Snippet object so that it can be re-used.
- enable generation of snippets of xml for testing purposes
- handle posts with parameters
- add thinktime
- allow generation of random strings
- allow generation of random bumbers
- allow inclusion of erlang snippets
- validate parameters do not contain chars which need to be escaped - add instructions to README
- act on return codes
- run the tsung_stats script
- clean old libraries
- move loads to loads
	- move arrival phases to separate file
	- load a default loadfile specified in environment file
	- enable load to be specified on command line
- update readme with requirements (tsung)
- update readme iwth where logs are written (.tsung..)
- Thinktime:
  - specify default thinktime in load_profile
  - overrride thinktime in individual request
- scenarios - collections of sessions
  user can specify either scenario or session.
  if name isn't found in scenarios folder, its a session, so create a dummy scenario comprising just the one session.
  get scenario to emit itself
  get each session to emit itself.
- read dynvars from file:
  - implement file type dynvar
  - implement session with file dynvars
  - inmplement dynvars() method on session
  - implement dynvars() method on scenario
  - implmement file_dynvar options in wrapper
- make load testing scenario
  - finish exising_customer_print_pdf session
- dump file analysis


WIP:
====






STILL TO DO:
============
- do a dry run switch which will print out:
  - server being used
  - logging level
  - dumptraffic 
  - load_profile 
    - name each of the arrivalphases (or construct from params)
  - default request time
  - what sessions
    - names of each request in the session


- execute perl_stats
- print url for viewing graphs












